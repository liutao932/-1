对于长度为n的一个字符串A（仅包含数字，大小写英文字母），请设计一个高效算法，计算其中最长回文子串的长度。


数据范围： 1 \le n \le 10001≤n≤1000
要求：空间复杂度 O(1)O(1)，时间复杂度 O(n^2)O(n 
2
 )
进阶:  空间复杂度 O(n)O(n)，时间复杂度 O(n)O(n)
示例1
输入：
"ababc"
复制
返回值：
3
复制
说明：
最长的回文子串为"aba"与"bab"，长度都为3
示例2
输入：
"abbba"
复制
返回值：
5
复制
示例3
输入：
"b"
复制
返回值：
1



#include<stdbool.h>
bool Reverse(char *left,char *rigth)
{
    while(left < rigth)
    {
        if(*left != *rigth)
        {
            return false;
        }
        left++;
        rigth--;
    }
    return true;
}
int getLongestPalindrome(char* A ) {
    char *prev = A,*cur = A;
    int count = 1;
    while(*prev)
    {
        while(*cur)
        {
           if(Reverse(prev,cur))
           {
               int len = cur - prev + 1;
               if(len > count)
               {
                   count = len;
               }
           }
            cur++;
        }
        prev++;
        cur = prev;
    }
    return count;
}
